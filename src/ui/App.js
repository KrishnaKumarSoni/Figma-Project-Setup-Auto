import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useStore } from '../store/useStore';
import ColorPicker from './components/ColorPicker';
import FontSelector from './components/FontSelector';
import FileUpload from './components/FileUpload';
export default function App() {
    const store = useStore();
    const handleSubmit = (e) => {
        e.preventDefault();
        // Send data to plugin
        parent.postMessage({ pluginMessage: { type: 'create-design-system', data: store } }, '*');
    };
    return (_jsx("div", { className: "p-4", children: _jsxs("form", { onSubmit: handleSubmit, className: "space-y-6", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium", children: "Design Type" }), _jsxs("select", { value: store.designType, onChange: (e) => store.setField('designType', e.target.value), className: "mt-1 block w-full rounded-md border-gray-300", children: [_jsx("option", { value: "mobile", children: "Mobile" }), _jsx("option", { value: "web", children: "Web" }), _jsx("option", { value: "social", children: "Social" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium", children: "Colors" }), _jsxs("div", { className: "space-y-2", children: [_jsx(ColorPicker, { label: "Primary", value: store.colors.primary, onChange: (color) => store.setField('colors', Object.assign(Object.assign({}, store.colors), { primary: color })) }), _jsx(ColorPicker, { label: "Secondary", value: store.colors.secondary, onChange: (color) => store.setField('colors', Object.assign(Object.assign({}, store.colors), { secondary: color })) }), _jsx(ColorPicker, { label: "Accent", value: store.colors.accent, onChange: (color) => store.setField('colors', Object.assign(Object.assign({}, store.colors), { accent: color })) })] })] }), _jsx(FontSelector, { primaryFont: store.fonts.primary, secondaryFont: store.fonts.secondary, onChange: (fonts) => store.setField('fonts', fonts) }), _jsx(FileUpload, { files: store.brandAssets, onChange: (files) => store.setField('brandAssets', files) }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium", children: "Corner Radius" }), _jsx("input", { type: "number", value: store.cornerRadius, onChange: (e) => store.setField('cornerRadius', Number(e.target.value)), className: "mt-1 block w-full rounded-md border-gray-300" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium", children: "Shadow Style" }), _jsxs("select", { value: store.shadowStyle, onChange: (e) => store.setField('shadowStyle', e.target.value), className: "mt-1 block w-full rounded-md border-gray-300", children: [_jsx("option", { value: "flat", children: "Flat" }), _jsx("option", { value: "minimal", children: "Minimal" }), _jsx("option", { value: "elevated", children: "Elevated" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium", children: "Layout Preference" }), _jsxs("select", { value: store.layout, onChange: (e) => store.setField('layout', e.target.value), className: "mt-1 block w-full rounded-md border-gray-300", children: [_jsx("option", { value: "mobile_first", children: "Mobile First" }), _jsx("option", { value: "web_first", children: "Web First" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium", children: "Brand Voice" }), _jsx("textarea", { value: store.brandVoice, onChange: (e) => store.setField('brandVoice', e.target.value), className: "mt-1 block w-full rounded-md border-gray-300", rows: 3, placeholder: "Describe your brand's voice and tone..." })] }), _jsx("button", { type: "submit", className: "w-full bg-blue-500 text-white rounded-md py-2", children: "Generate Design System" })] }) }));
}
